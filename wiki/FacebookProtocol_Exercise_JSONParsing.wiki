#summary JSON Parsing exercise specification
#labels Phase-QA,Phase-Support

= Exercise: JSON Parsing =

I'm currently quite busy and I don't have enough time to solve this thing somehow fastly and effectively. I'd like you, if you like, to comment this and optionally provide some nice, fast and clean solution of this thing.

I'll start working again in about a week or so, till then, this wiki page is opened to your ideas :)

== Problem ==

Parsing a JSON data string into a code-friendly structure.

=== Input (JSON data in std::string) ===

{{{
for (;;);{"t":"msg","c":"p_1234567890","ms":[{"type":"msg","msg":{"text":"MESSAGE NUMBER ONE","time":1246640806807,"clientTime":1246640806282,"msgID":"4073779549"},"from":555555555,"to":6666666666,"from_name":"Sender Name","to_name":"Receiver Name","from_first_name":"Sender","to_first_name":"Receiver"},{"type":"msg","msg":{"text":"MESSAGE NUMBER TWO","time":1246640807666,"clientTime":1246640807125,"msgID":"628963118"},"from":555555555,"to":6666666666,"from_name":"Sender Name","to_name":"Receiver Name","from_first_name":"Sender","to_first_name":"Receiver"},{"id":555555555,"window_id":12345,"type":"focus_chat"},{"id":555555555,"window_id":12345,"type":"focus_chat"},{"id":555555555,"window_id":12345,"type":"focus_chat"},{"id":555555555,"window_id":12345,"type":"focus_chat"}]}
}}}

=== Proposed/desired output (C++ std::vector< DATA STRUCTURE > object) ===

{{{
   Sender ID     Timestamp         Message text
--------------------------------------------------------
|  555555555  |  1246640806807  |  MESSAGE NUMBER ONE  |
|  555555555  |  1246640807666  |  MESSAGE NUMBER TWO  |
--------------------------------------------------------
}}}

== Code frame ==

{{{

typedef struct FacebookMessage
{
    std::string sender_id;
    std::string timestamp;
    std::string message_text;
}

std::vector< FacebookMessage > getMessages( std::string jsonData )
{
    // type definition -- storage vector
    
    std::vector< FacebookMessage > messages;
    
    // implementation -- may vary in solutions of course :)
    
    ..  {
    ..      FacebookMessage msg;
    ..      msg.sender_id    = ...
    ..      msg.timestamp    = ...
    ..      msg.message_text = ...
    ..      messages.push_back( msg );
    ..  }
    
    // return the received messages structure
    
    return messages;
}
}}}

== Helpers ==

a) tinyJSON

or

b) your own request-optimised code (because proper JSON parsing is too "heavy" I think)

== Solution ==

Quote/Bracket matching based solution under implementation progress, but still open to your ideas :)